#!/usr/bin/python3
import sqlite3,sys
from operator import itemgetter

if len(sys.argv) != 3 :
	print("Usage:",sys.argv[0],"\"title\" N")
	sys.exit(1)

# title given
title = str(sys.argv[1])
# number of rows in output
N = int(sys.argv[2])

con = sqlite3.connect('a2_1.db')
cur = con.cursor()

cur.execute('SELECT m.title, m.year, r.imdb_score, r.num_voted_users, '
			'GROUP_CONCAT(k.keyword), GROUP_CONCAT (g.genre) '
			'FROM movie m '
			'JOIN rating r ON (m.id = r.movie_id) '
			'JOIN genre g ON (m.id = g.movie_id) '
			'LEFT JOIN keyword k ON (m.id = k.movie_id) '
			'GROUP BY m.title')

# incase multiple movies have the same title
latest_year = 0
# to store the main title, its genres and keywords
main_query = []
main_title = ""
main_genres = set()
main_keywords = set()

record = list(cur.fetchall())
record_2 = record

i = 0
# loop to find the main movie to compare with the rest
for t in record:

	if t == None:
		break
	t = list(t)
	a, b, c, d, e, f = t
	a = str(a)
	#print(type(t))
	if (t[5] != None):
		t[5] = t[5].split(',')
		t[5] = set(t[5])
	if (t[4] != None):
		t[4] = set(t[4].split(','))
	#compare the titles (case-insensitive)
	if (title.casefold() == a.casefold()) and b > latest_year:
		main_query = t
		main_title = a
		main_genres = t[5]
		main_keywords = t[4]
	
	record[i] = t
	i+=1

j = 0
# loop to add 2 colums to each movie, number of common genres and keywords respectively
for curr in record:
	
	if curr == None:
		break

	curr = list(curr)
	curr_genres = curr[5]
	# title with no genres
	if curr[5] == None:
		curr.append(0)
	else:
		# size of common genre set
		n_common_genres = len(curr_genres & main_genres)
		# add a colums for number of common genres
		curr.append(n_common_genres)

	curr_keywords = curr[4]
	# set of keywords of current tuple
	# in case no mathcing keywords
	if (curr[4] == None):
		curr.append(0)
	else:
		# add a colums for number of common keywords
		n_common_keywords = len(curr_keywords & main_keywords)
		curr.append(n_common_keywords)

	#curr = tuple(curr)
	record[j] = curr
	j += 1

k = 1

sorted_record = sorted(record, key=itemgetter(6,7,2,3), reverse = True)
for row in sorted_record:
	if k > N:
		break
	# we don't want the movie itself
	if row[0] == main_title:
		continue
	# if year is None
	if (row[1] == None):
		print("{}. {} [{}, {}, {}, {}]".format(k, row[0], row[6], row[7], float(row[2]), row[3]))
	else:
		print("{}. {} ({}) [{}, {}, {}, {}]".format(k, row[0], row[1], row[6], row[7], float(row[2]), row[3]))
	k += 1

con.close()